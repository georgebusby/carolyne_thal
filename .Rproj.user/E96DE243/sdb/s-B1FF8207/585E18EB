{
    "collab_server" : "",
    "contents" : "###################################################################\n#############                  Script for tree            #########\n###################################################################\n###################################################################\n## LOAD ANY EXTERIOR FUNCTIONS AND LIBRARIES\nlibrary(\"RColorBrewer\")\nlibrary(\"grid\")\nsource(\"functions/plot_genes.R\")\nsource(\"functions/loadGeneticMap.R\")\nsource(\"functions/line2user.R\")\nsource(\"functions/compute.ld.R\")\n## \n\n## DEFINE PARAMETERS\nchrom <- \"16\"\n########################\n## 00 READ IN DATA\n## UNCOMMENT TO READ IN ONCE\n\n# #Read in gen and samples files\n# chr16.gen <- read.table (paste0(\"data/Kenya-2.5M_chr\",chrom,\":0-10000000_nature_2015_qc_set_merged.haps\"), header=F)\n# samples <- read.table (paste0(\"data/Kenya-2.5M_chr\",chrom,\":0-10000000_nature_2015_qc_set_merged.sample\"), header=T)\n# map <- read.table(paste0(\"data/genetic_map_chr\",chrom,\"_combined_b37.txt\"),header = T, as.is = T)\n# \n# \n# ## CONVERT TO SELSCAN FORMAT\n# selscan.haps <- t(chr16.gen[,7:ncol(chr16.gen)])\n# selscan.map <- chr16.gen[,c(1,3,4)]\n# colnames(selscan.map) <- c(\"chrom\",\"rsid\",\"position\")\n# # need to interpolate genetic distance and this were copied from the cluster\n# head(map)\n# head(selscan.map)\n# gen_dist <- approx(map$position, map$Genetic_Map.cM., selscan.map$position  )$y\n\n\nhap.plot.beg <- 0\nhap.plot.end <- 2e6\n## gene/recrates plot region\ngene.plot.beg <- 0\ngene.plot.end <- 0.5e6\n\n########################\n## DEFINE REGION TO PLOT HAPLOTYPES\n## here this is for all snps between 0 and 2Mb\nhap.plot.region <- which(selscan.map$position>hap.plot.beg&selscan.map$position<=hap.plot.end)\n## DEFINE REGION TO ZOOM IN FOR GENE PLOT AND RECRATES\n## here this is for SNPs between 0 and 0.5Mb\ngene.plot.region <- which(selscan.map$position>gene.plot.beg&selscan.map$position<=gene.plot.end) \n\n## make a phlogenetic tree of thal haplotypes\n# plot individuals with alpha_thal\na.thal.haps <- selscan.haps[selscan.haps[,72]==1,hap.plot.region]\na.thal.samps <- as.character(samples$ID_1[-1])\na.thal.eth <- as.character(samples$curated_ethnicity[-1])\ntmp <- c()\nfor(i in a.thal.samps) tmp <- c(tmp,i,i)\na.thal.samps <- tmp\ntmp <- c()\nfor(i in a.thal.eth) tmp <- c(tmp,i,i)\na.thal.eth <- tmp\n\n\n## LET'S TRY USING APE ...\n## further options here:http://www.molecularecologist.com/2016/02/quick-and-dirty-tree-building-in-r/ \n# install.packages(\"ape\")\n# install.packages(\"phangorn\")\n# install.packages(\"seqinr\")\nlibrary(ape)\nlibrary(phangorn)\nlibrary(seqinr)\n\n## first we need to generate a distance matrix\nthal.dat <- as.phyDat(a.thal.haps, type = \"USER\",\n                      levels = c(0,1), names = a.thal.eth[selscan.haps[,72]==1])\nthal_dist <- dist.ml(thal.dat)\n\n## NOW TRY A FEW TREES\nthal_NJ <- nj(thal_dist)\nplot(thal_NJ)\n\nthal_UPGMA <- upgma(thal_dist)\nplot(thal_UPGMA)\n\n## ethnic group of tip\nnew.eth <- a.thal.eth[as.numeric(gsub(\"V\",\"\",thal_UPGMA$tip.label))]\nmain.eths <- c(\"GIRIAMA\",\"CHONYI\",\"KAUMA\")\nnew.eth[is.na(new.eth)] <- \"OTHER\"\nnew.eth[!new.eth%in%main.eths] <- \"OTHER\"\n\n## MAKE A TABLE FOR TREE TIP LABELS\ntip.col.palette <- c(\"hotpink\",\"darkgreen\",\"cornflowerblue\",\"grey50\")\ntip.cols <- tip.col.palette[as.numeric(as.factor(new.eth))]\ntree_labels <- cbind(new.eth,tip.cols)\ncolnames(tree_labels) <- c(\"eth\",\"col2plot\")\ntree_labels <- as.data.frame(tree_labels)\n\ntree2plot <- as.phylo(thal_UPGMA)\ntree2plot$tip.label <- rep(\"-\",length(new.eth)) \n\n\n## colour edges/\nedge_cols <- c()\nfor(i in 1:nrow(tree2plot$edge))\n{\n  cl <- \"#000000\"\n  edge_cols <- c(edge_cols,cl)\n}\n\npng(\"figures/AlphaThalHaplotypesUPGMATree.png\",height = 2000,width =500, res = 150)\npar(mar=c(1,3,1,1))\nplot(tree2plot,lab4ut=\"axial\",type=\"phylogram\",xaxs=\"i\",yaxs=\"i\",\n     edge.color=edge_cols,tip.color=as.character(tree_labels$col2plot),use.edge.length=F)\ndev.off()\n\n",
    "created" : 1491208310489.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3658314827",
    "id" : "585E18EB",
    "lastKnownWriteTime" : 1491316997,
    "last_content_update" : 1491316997121,
    "path" : "~/repos/carolyne_thal/plotTree.R",
    "project_path" : "plotTree.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}